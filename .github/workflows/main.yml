name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push, or for pull requests against master
  push:
    paths-ignore:
      - NEWS
  pull_request:
    branches: [ master ]
    paths-ignore:
      - NEWS

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linux:
    runs-on: 'ubuntu-20.04'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ github.job }}
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            gettext \
            libwxgtk3.0-gtk3-dev \
            libavcodec-dev \
            libavformat-dev \
            libproj-dev \
            libswscale-dev \
            mesa-common-dev \
            libglu1-mesa-dev \
            libx11-dev \
            libxext-dev \
            ghostscript \
            netpbm \
            x11proto-core-dev \
            liblocale-po-perl \
            unifont \
            docbook \
            docbook-utils \
            w3m
    - name: bootstrap source tree
      run: |
        autoreconf -fiv
        git checkout INSTALL
    - name: configure
      run: ./configure CC='ccache gcc' CXX='ccache g++' CFLAGS='-Wall -W -Werror -O2 -g' CXXFLAGS='-Wall -W -Wno-deprecated-copy -Werror -O2 -g'
    - name: make
      run: make -j2
    - name: Run tests
      run: cd tests && ./cavern.tst longname
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: |
        printf '%s\n' .ccache > ".git/info/exclude"
        git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  valgrind:
    runs-on: 'ubuntu-20.04'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ github.job }}
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            gettext \
            libwxgtk3.0-gtk3-dev \
            libavcodec-dev \
            libavformat-dev \
            libproj-dev \
            libswscale-dev \
            mesa-common-dev \
            libglu1-mesa-dev \
            libx11-dev \
            libxext-dev \
            ghostscript \
            netpbm \
            x11proto-core-dev \
            liblocale-po-perl \
            unifont \
            docbook \
            docbook-utils \
            w3m
        sudo apt-get install valgrind
    - name: bootstrap source tree
      run: |
        autoreconf -fiv
        git checkout INSTALL
    - name: configure
      run: ./configure CC='ccache gcc' CXX='ccache g++'
    - name: make
      run: make -j2
    - name: Run tests
      run: cd tests && VALGRIND=valgrind ./cavern.tst longname
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: |
        printf '%s\n' .ccache > ".git/info/exclude"
        git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  # Debian stable has wxWidgets 3.2.
  debian-stable:
    runs-on: 'ubuntu-latest'
    container: debian:stable
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Install package dependencies
      run: |
        apt-get update
        apt-get install -y \
            autoconf \
            automake \
            gettext \
            libwxgtk3.2-dev \
            libavcodec-dev \
            libavformat-dev \
            libproj-dev \
            libswscale-dev \
            mesa-common-dev \
            libglu1-mesa-dev \
            libx11-dev \
            libxext-dev \
            ghostscript \
            netpbm \
            x11proto-core-dev \
            liblocale-po-perl \
            unifont \
            docbook \
            docbook-utils \
            w3m
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ github.job }}
    - name: bootstrap source tree
      run: |
        autoreconf -fiv
        git checkout INSTALL
    - name: configure
      run: ./configure CC='ccache gcc' CXX='ccache g++' CFLAGS='-Wall -W -Werror -O2 -g' CXXFLAGS='-Wall -W -Werror -O2 -g'
    - name: make
      run: make -j2
    - name: Run tests
      run: make check VERBOSE=1
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: |
        printf '%s\n' .ccache > ".git/info/exclude"
        git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  clang-sanitisiers:
    runs-on: 'ubuntu-latest'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ github.job }}
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            gettext \
            libwxgtk3.0-gtk3-dev \
            libavcodec-dev \
            libavformat-dev \
            libproj-dev \
            libswscale-dev \
            mesa-common-dev \
            libglu1-mesa-dev \
            libx11-dev \
            libxext-dev \
            ghostscript \
            netpbm \
            x11proto-core-dev \
            liblocale-po-perl \
            unifont \
            docbook \
            docbook-utils \
            w3m
    - name: bootstrap source tree
      run: |
        autoreconf -fiv
        git checkout INSTALL
    - name: configure
      run: |
        # We use clang here because (at least currently) it supports a few
        # extra sanitiser checks compared to GCC.
        export CC='ccache clang'
        export CXX='ccache clang++'
        export CFLAGS='-Wall -W -Werror'
        # float-divide-by-zero, nullability and unsigned-overflow aren't
        # undefined behaviour checks, but they catch for things we don't expect
        # our code to do.
        export CXXFLAGS='-fsanitize=address,undefined,float-divide-by-zero,local-bounds,nullability,unsigned-integer-overflow -fsanitize-address-use-after-scope -fsanitize-recover=all -g -O2 -fno-omit-frame-pointer -Wall -W -Wno-deprecated-copy-with-user-provided-copy -Wno-shadow -Werror'
        ./configure
    - name: make
      run: make -j2
    - name: Run longname test
      run: cd tests && ./cavern.tst longname
    - name: Run tests
      run: make check VERBOSE=1
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: |
        printf '%s\n' .ccache > ".git/info/exclude"
        git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
